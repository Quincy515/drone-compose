version: "3.7"
services:
  nginx:
    image: nginx:alpine
    container_name: dronetest_nginx
    ports:
      - "80:80"
    restart: always
    networks:
      - dronenet
    volumes:
      - ./my.conf:/etc/nginx/conf.d/default.conf:rw
  mysql:
    image: mysql:latest
    restart: always
    container_name: dronetest_mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=drone
      - MYSQL_USER=drone
      - MYSQL_PASSWORD=drone_password
    networks:
      - dronenet
    volumes:
      - /path/to/conf:/etc/my.cnf:rw
      - /path/to/data:/var/lib/mysql/:rw
      - /path/to/logs:/var/log/mysql/:rw
      - /path/to/init:/docker-entrypoint-initdb.d/rw
  memcache:
    image: memcached:alpine
    container_name: test_memcache
    restart: always
    networks:
      - dronenet
  gitea:
    image: gitea/gitea:latest
    restart: always
    container_name: test_gitea
    networks:
      - dronenet
    ports:
      - "1022:22"                 #git服务对外使用22端口会更加方便
      - "3000:3000"
    volumes:
      - /var/lib/gitea:/data:rw #gitea的data数据应该做持久化，映射到宿主机磁盘上
    depends_on:
      - mysql
  drone-server:
    image: drone/drone:1.0.0-rc.6 #不要用latest,latest并非稳定版本
    container_name: dronetest_server
    networks: 
      - dronenet
    ports:
      - "8080:80"
    volumes:
      - /var/lib/drone:/var/lib/drone/:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
    restart: always
    environment:
      - DRONE_DEBUG=true
      - DRONE_DATABASE_DATASOURCE=drone:drone_password@tcp(dronetest_mysql:3306)/drone?parseTime=true   #mysql配置，要与上边mysql容器中的配置一致
      - DRONE_DATABASE_DRIVER=mysql
      - DRONE_GITEA_SKIP_VERIFY=false
      - DRONE_GITEA_SERVER=http://test_gitea:3000
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RPC_SECRET=YOU_KEY_ALQU2M0KdptXUdTPKcEw  #RPC秘钥
      - DRONE_SERVER_PROTO=http #这个配置决定了你激活时仓库中的webhook地址的proto
      - DRONE_SERVER_HOST=custercode.com
      - DRONE_USER_CREATE=username:custer,admin:true  #管理员账号，是你想要作为管理员的Gitea用户名
  drone-agent:
    image: drone/agent:1.0.0-rc.6
    container_name: dronetest_agent
    restart: always
    networks:
      - dronenet
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:
      - DRONE_RPC_SERVER=http://dronetest_server
      - DRONE_RPC_SECRET=YOU_KEY_ALQU2M0KdptXUdTPKcEw
      - DRONE_DEBUG=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_LOGS_NOCOLOR=false
networks:
  dronenet:
